generator client {
  provider = "prisma-client-js"
  output   = "../src/db/generated/organization"
}

datasource db {
  provider = "postgresql"
  url      = env("BASE_ORG_DATABASE_URL")
}

model User {
  id        String @id @default(uuid())
  firstName String @map("first_name")
  lastName  String @map("last_name")
  email     String @unique
  password  String

  votations    VotationUser[]
  candidatures ListCandidate[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model List {
  id   String @id @default(uuid())
  name String @unique

  candidates ListCandidate[]
  votations  VotationList[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  @@map("lists")
}

model Votation {
  id             String  @id @default(uuid())
  name           String  @unique
  minPreferences Int     @map("min_preferences")
  maxPreferences Int     @map("max_preferences")
  intralist      Boolean
  opened         Boolean @default(false)

  users VotationUser[]
  lists VotationList[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("votations")
}

model VotationList {
  votation   Votation @relation(fields: [votationId], references: [id], onDelete: Cascade)
  votationId String
  list       List     @relation(fields: [listId], references: [id], onDelete: Cascade)
  listId     String

  @@id([listId, votationId])
  @@map("votation_lists")
}

model VotationUser {
  votation   Votation @relation(fields: [votationId], references: [id], onDelete: Cascade)
  votationId String
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String
  voted      Boolean  @default(false)

  @@id([userId, votationId])
  @@map("votation_users")
}

model ListCandidate {
  list   List   @relation(fields: [listId], references: [id], onDelete: Cascade)
  listId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
  votes  Int    @default(0) @map("votes")

  @@id([listId, userId])
  @@map("list_candidates")
}
